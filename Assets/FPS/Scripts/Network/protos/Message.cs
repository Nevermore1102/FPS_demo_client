// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Unity.FPS.Game {

  /// <summary>Holder for reflection information generated from message.proto</summary>
  public static partial class MessageReflection {

    #region Descriptor
    /// <summary>File descriptor for message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1tZXNzYWdlLnByb3RvEg5Vbml0eS5GUFMuR2FtZSIqCgdWZWN0b3IzEgkK",
            "AXgYASABKAISCQoBeRgCIAEoAhIJCgF6GAMgASgCIu8CChZQbGF5ZXJBdHRy",
            "aWJ1dGVNZXNzYWdlEhEKCXBsYXllcl9pZBgBIAEoDRIOCgZoZWFsdGgYAiAB",
            "KAISEgoKbWF4X2hlYWx0aBgDIAEoAhI+CgRhbW1vGAQgAygLMjAuVW5pdHku",
            "RlBTLkdhbWUuUGxheWVyQXR0cmlidXRlTWVzc2FnZS5BbW1vRW50cnkSRAoH",
            "d2VhcG9ucxgFIAMoCzIzLlVuaXR5LkZQUy5HYW1lLlBsYXllckF0dHJpYnV0",
            "ZU1lc3NhZ2UuV2VhcG9uc0VudHJ5Eg0KBWFybW9yGAYgASgCEg0KBXNjb3Jl",
            "GAcgASgFEg0KBWtpbGxzGAggASgFEg4KBmRlYXRocxgJIAEoBRorCglBbW1v",
            "RW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgFOgI4ARouCgxXZWFw",
            "b25zRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgFOgI4ASLcAQoS",
            "UGxheWVyU3RhdGVNZXNzYWdlEhEKCXBsYXllcl9pZBgBIAEoDRIpCghwb3Np",
            "dGlvbhgCIAEoCzIXLlVuaXR5LkZQUy5HYW1lLlZlY3RvcjMSKQoIcm90YXRp",
            "b24YAyABKAsyFy5Vbml0eS5GUFMuR2FtZS5WZWN0b3IzEjoKCmF0dHJpYnV0",
            "ZXMYBCABKAsyJi5Vbml0eS5GUFMuR2FtZS5QbGF5ZXJBdHRyaWJ1dGVNZXNz",
            "YWdlEhAKCGlzX2FsaXZlGAUgASgIEg8KB3RlYW1faWQYBiABKA0iEgoQSGVh",
            "cnRiZWF0TWVzc2FnZSLuAQoTUGxheWVyVXBkYXRlTWVzc2FnZRISCgpwb3Np",
            "dGlvbl94GAEgASgCEhIKCnBvc2l0aW9uX3kYAiABKAISEgoKcG9zaXRpb25f",
            "ehgDIAEoAhISCgpyb3RhdGlvbl94GAQgASgCEhIKCnJvdGF0aW9uX3kYBSAB",
            "KAISEgoKcm90YXRpb25fehgGIAEoAhISCgp2ZWxvY2l0eV94GAcgASgCEhIK",
            "CnZlbG9jaXR5X3kYCCABKAISEgoKdmVsb2NpdHlfehgJIAEoAhITCgtpc19n",
            "cm91bmRlZBgKIAEoCBIOCgZoZWFsdGgYCyABKAIi4AIKDk5ldHdvcmtNZXNz",
            "YWdlEisKBm1zZ19pZBgBIAEoDjIbLlVuaXR5LkZQUy5HYW1lLk1lc3NhZ2VU",
            "eXBlEhEKCXBsYXllcl9pZBgCIAEoDRIRCgl0aW1lc3RhbXAYAyABKA0SNQoJ",
            "aGVhcnRiZWF0GAQgASgLMiAuVW5pdHkuRlBTLkdhbWUuSGVhcnRiZWF0TWVz",
            "c2FnZUgAEjwKDXBsYXllcl91cGRhdGUYBSABKAsyIy5Vbml0eS5GUFMuR2Ft",
            "ZS5QbGF5ZXJVcGRhdGVNZXNzYWdlSAASQgoQcGxheWVyX2F0dHJpYnV0ZRgG",
            "IAEoCzImLlVuaXR5LkZQUy5HYW1lLlBsYXllckF0dHJpYnV0ZU1lc3NhZ2VI",
            "ABI6CgxwbGF5ZXJfc3RhdGUYByABKAsyIi5Vbml0eS5GUFMuR2FtZS5QbGF5",
            "ZXJTdGF0ZU1lc3NhZ2VIAEIGCgRkYXRhKnoKC01lc3NhZ2VUeXBlEg0KCUhF",
            "QVJUQkVBVBAAEhEKDVBMQVlFUl9VUERBVEUQARIUChBQTEFZRVJfQVRUUklC",
            "VVRFEAISEAoMUExBWUVSX1NUQVRFEAMSDwoLUExBWUVSX0pPSU4QBBIQCgxQ",
            "TEFZRVJfTEVBVkUQBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Unity.FPS.Game.MessageType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.FPS.Game.Vector3), global::Unity.FPS.Game.Vector3.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.FPS.Game.PlayerAttributeMessage), global::Unity.FPS.Game.PlayerAttributeMessage.Parser, new[]{ "PlayerId", "Health", "MaxHealth", "Ammo", "Weapons", "Armor", "Score", "Kills", "Deaths" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.FPS.Game.PlayerStateMessage), global::Unity.FPS.Game.PlayerStateMessage.Parser, new[]{ "PlayerId", "Position", "Rotation", "Attributes", "IsAlive", "TeamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.FPS.Game.HeartbeatMessage), global::Unity.FPS.Game.HeartbeatMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.FPS.Game.PlayerUpdateMessage), global::Unity.FPS.Game.PlayerUpdateMessage.Parser, new[]{ "PositionX", "PositionY", "PositionZ", "RotationX", "RotationY", "RotationZ", "VelocityX", "VelocityY", "VelocityZ", "IsGrounded", "Health" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.FPS.Game.NetworkMessage), global::Unity.FPS.Game.NetworkMessage.Parser, new[]{ "MsgId", "PlayerId", "Timestamp", "Heartbeat", "PlayerUpdate", "PlayerAttribute", "PlayerState" }, new[]{ "Data" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// 消息类型枚举
  /// </summary>
  public enum MessageType {
    [pbr::OriginalName("HEARTBEAT")] Heartbeat = 0,
    [pbr::OriginalName("PLAYER_UPDATE")] PlayerUpdate = 1,
    [pbr::OriginalName("PLAYER_ATTRIBUTE")] PlayerAttribute = 2,
    [pbr::OriginalName("PLAYER_STATE")] PlayerState = 3,
    [pbr::OriginalName("PLAYER_JOIN")] PlayerJoin = 4,
    [pbr::OriginalName("PLAYER_LEAVE")] PlayerLeave = 5,
  }

  #endregion

  #region Messages
  /// <summary>
  /// 向量3结构
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Vector3 : pb::IMessage<Vector3>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Vector3> _parser = new pb::MessageParser<Vector3>(() => new Vector3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Vector3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.FPS.Game.MessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Vector3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Vector3(Vector3 other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Vector3 Clone() {
      return new Vector3(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Vector3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Vector3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Vector3 other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 玩家属性消息
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerAttributeMessage : pb::IMessage<PlayerAttributeMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerAttributeMessage> _parser = new pb::MessageParser<PlayerAttributeMessage>(() => new PlayerAttributeMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerAttributeMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.FPS.Game.MessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerAttributeMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerAttributeMessage(PlayerAttributeMessage other) : this() {
      playerId_ = other.playerId_;
      health_ = other.health_;
      maxHealth_ = other.maxHealth_;
      ammo_ = other.ammo_.Clone();
      weapons_ = other.weapons_.Clone();
      armor_ = other.armor_;
      score_ = other.score_;
      kills_ = other.kills_;
      deaths_ = other.deaths_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerAttributeMessage Clone() {
      return new PlayerAttributeMessage(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private uint playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 2;
    private float health_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Health {
      get { return health_; }
      set {
        health_ = value;
      }
    }

    /// <summary>Field number for the "max_health" field.</summary>
    public const int MaxHealthFieldNumber = 3;
    private float maxHealth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxHealth {
      get { return maxHealth_; }
      set {
        maxHealth_ = value;
      }
    }

    /// <summary>Field number for the "ammo" field.</summary>
    public const int AmmoFieldNumber = 4;
    private static readonly pbc::MapField<string, int>.Codec _map_ammo_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 34);
    private readonly pbc::MapField<string, int> ammo_ = new pbc::MapField<string, int>();
    /// <summary>
    /// 不同武器的弹药数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, int> Ammo {
      get { return ammo_; }
    }

    /// <summary>Field number for the "weapons" field.</summary>
    public const int WeaponsFieldNumber = 5;
    private static readonly pbc::MapField<string, int>.Codec _map_weapons_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 42);
    private readonly pbc::MapField<string, int> weapons_ = new pbc::MapField<string, int>();
    /// <summary>
    /// 拥有的武器
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, int> Weapons {
      get { return weapons_; }
    }

    /// <summary>Field number for the "armor" field.</summary>
    public const int ArmorFieldNumber = 6;
    private float armor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Armor {
      get { return armor_; }
      set {
        armor_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 7;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "kills" field.</summary>
    public const int KillsFieldNumber = 8;
    private int kills_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Kills {
      get { return kills_; }
      set {
        kills_ = value;
      }
    }

    /// <summary>Field number for the "deaths" field.</summary>
    public const int DeathsFieldNumber = 9;
    private int deaths_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Deaths {
      get { return deaths_; }
      set {
        deaths_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerAttributeMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerAttributeMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Health, other.Health)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxHealth, other.MaxHealth)) return false;
      if (!Ammo.Equals(other.Ammo)) return false;
      if (!Weapons.Equals(other.Weapons)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Armor, other.Armor)) return false;
      if (Score != other.Score) return false;
      if (Kills != other.Kills) return false;
      if (Deaths != other.Deaths) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Health != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Health);
      if (MaxHealth != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxHealth);
      hash ^= Ammo.GetHashCode();
      hash ^= Weapons.GetHashCode();
      if (Armor != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Armor);
      if (Score != 0) hash ^= Score.GetHashCode();
      if (Kills != 0) hash ^= Kills.GetHashCode();
      if (Deaths != 0) hash ^= Deaths.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PlayerId);
      }
      if (Health != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Health);
      }
      if (MaxHealth != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(MaxHealth);
      }
      ammo_.WriteTo(output, _map_ammo_codec);
      weapons_.WriteTo(output, _map_weapons_codec);
      if (Armor != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Armor);
      }
      if (Score != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Score);
      }
      if (Kills != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Kills);
      }
      if (Deaths != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Deaths);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PlayerId);
      }
      if (Health != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Health);
      }
      if (MaxHealth != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(MaxHealth);
      }
      ammo_.WriteTo(ref output, _map_ammo_codec);
      weapons_.WriteTo(ref output, _map_weapons_codec);
      if (Armor != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Armor);
      }
      if (Score != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Score);
      }
      if (Kills != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Kills);
      }
      if (Deaths != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Deaths);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerId);
      }
      if (Health != 0F) {
        size += 1 + 4;
      }
      if (MaxHealth != 0F) {
        size += 1 + 4;
      }
      size += ammo_.CalculateSize(_map_ammo_codec);
      size += weapons_.CalculateSize(_map_weapons_codec);
      if (Armor != 0F) {
        size += 1 + 4;
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (Kills != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Kills);
      }
      if (Deaths != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Deaths);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerAttributeMessage other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Health != 0F) {
        Health = other.Health;
      }
      if (other.MaxHealth != 0F) {
        MaxHealth = other.MaxHealth;
      }
      ammo_.MergeFrom(other.ammo_);
      weapons_.MergeFrom(other.weapons_);
      if (other.Armor != 0F) {
        Armor = other.Armor;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.Kills != 0) {
        Kills = other.Kills;
      }
      if (other.Deaths != 0) {
        Deaths = other.Deaths;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadUInt32();
            break;
          }
          case 21: {
            Health = input.ReadFloat();
            break;
          }
          case 29: {
            MaxHealth = input.ReadFloat();
            break;
          }
          case 34: {
            ammo_.AddEntriesFrom(input, _map_ammo_codec);
            break;
          }
          case 42: {
            weapons_.AddEntriesFrom(input, _map_weapons_codec);
            break;
          }
          case 53: {
            Armor = input.ReadFloat();
            break;
          }
          case 56: {
            Score = input.ReadInt32();
            break;
          }
          case 64: {
            Kills = input.ReadInt32();
            break;
          }
          case 72: {
            Deaths = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadUInt32();
            break;
          }
          case 21: {
            Health = input.ReadFloat();
            break;
          }
          case 29: {
            MaxHealth = input.ReadFloat();
            break;
          }
          case 34: {
            ammo_.AddEntriesFrom(ref input, _map_ammo_codec);
            break;
          }
          case 42: {
            weapons_.AddEntriesFrom(ref input, _map_weapons_codec);
            break;
          }
          case 53: {
            Armor = input.ReadFloat();
            break;
          }
          case 56: {
            Score = input.ReadInt32();
            break;
          }
          case 64: {
            Kills = input.ReadInt32();
            break;
          }
          case 72: {
            Deaths = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 玩家状态消息
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerStateMessage : pb::IMessage<PlayerStateMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerStateMessage> _parser = new pb::MessageParser<PlayerStateMessage>(() => new PlayerStateMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerStateMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.FPS.Game.MessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerStateMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerStateMessage(PlayerStateMessage other) : this() {
      playerId_ = other.playerId_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      isAlive_ = other.isAlive_;
      teamId_ = other.teamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerStateMessage Clone() {
      return new PlayerStateMessage(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private uint playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 2;
    private global::Unity.FPS.Game.Vector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Unity.FPS.Game.Vector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "rotation" field.</summary>
    public const int RotationFieldNumber = 3;
    private global::Unity.FPS.Game.Vector3 rotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Unity.FPS.Game.Vector3 Rotation {
      get { return rotation_; }
      set {
        rotation_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 4;
    private global::Unity.FPS.Game.PlayerAttributeMessage attributes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Unity.FPS.Game.PlayerAttributeMessage Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    /// <summary>Field number for the "is_alive" field.</summary>
    public const int IsAliveFieldNumber = 5;
    private bool isAlive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAlive {
      get { return isAlive_; }
      set {
        isAlive_ = value;
      }
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int TeamIdFieldNumber = 6;
    private uint teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TeamId {
      get { return teamId_; }
      set {
        teamId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerStateMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerStateMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Rotation, other.Rotation)) return false;
      if (!object.Equals(Attributes, other.Attributes)) return false;
      if (IsAlive != other.IsAlive) return false;
      if (TeamId != other.TeamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (rotation_ != null) hash ^= Rotation.GetHashCode();
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (IsAlive != false) hash ^= IsAlive.GetHashCode();
      if (TeamId != 0) hash ^= TeamId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PlayerId);
      }
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (rotation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Rotation);
      }
      if (attributes_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Attributes);
      }
      if (IsAlive != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsAlive);
      }
      if (TeamId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TeamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PlayerId);
      }
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (rotation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Rotation);
      }
      if (attributes_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Attributes);
      }
      if (IsAlive != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsAlive);
      }
      if (TeamId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TeamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerId);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (rotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
      }
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (IsAlive != false) {
        size += 1 + 1;
      }
      if (TeamId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TeamId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerStateMessage other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Unity.FPS.Game.Vector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.rotation_ != null) {
        if (rotation_ == null) {
          Rotation = new global::Unity.FPS.Game.Vector3();
        }
        Rotation.MergeFrom(other.Rotation);
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          Attributes = new global::Unity.FPS.Game.PlayerAttributeMessage();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      if (other.IsAlive != false) {
        IsAlive = other.IsAlive;
      }
      if (other.TeamId != 0) {
        TeamId = other.TeamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (position_ == null) {
              Position = new global::Unity.FPS.Game.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 26: {
            if (rotation_ == null) {
              Rotation = new global::Unity.FPS.Game.Vector3();
            }
            input.ReadMessage(Rotation);
            break;
          }
          case 34: {
            if (attributes_ == null) {
              Attributes = new global::Unity.FPS.Game.PlayerAttributeMessage();
            }
            input.ReadMessage(Attributes);
            break;
          }
          case 40: {
            IsAlive = input.ReadBool();
            break;
          }
          case 48: {
            TeamId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (position_ == null) {
              Position = new global::Unity.FPS.Game.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 26: {
            if (rotation_ == null) {
              Rotation = new global::Unity.FPS.Game.Vector3();
            }
            input.ReadMessage(Rotation);
            break;
          }
          case 34: {
            if (attributes_ == null) {
              Attributes = new global::Unity.FPS.Game.PlayerAttributeMessage();
            }
            input.ReadMessage(Attributes);
            break;
          }
          case 40: {
            IsAlive = input.ReadBool();
            break;
          }
          case 48: {
            TeamId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 心跳消息
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class HeartbeatMessage : pb::IMessage<HeartbeatMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HeartbeatMessage> _parser = new pb::MessageParser<HeartbeatMessage>(() => new HeartbeatMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HeartbeatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.FPS.Game.MessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HeartbeatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HeartbeatMessage(HeartbeatMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HeartbeatMessage Clone() {
      return new HeartbeatMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HeartbeatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HeartbeatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HeartbeatMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 玩家更新消息
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerUpdateMessage : pb::IMessage<PlayerUpdateMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerUpdateMessage> _parser = new pb::MessageParser<PlayerUpdateMessage>(() => new PlayerUpdateMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerUpdateMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.FPS.Game.MessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerUpdateMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerUpdateMessage(PlayerUpdateMessage other) : this() {
      positionX_ = other.positionX_;
      positionY_ = other.positionY_;
      positionZ_ = other.positionZ_;
      rotationX_ = other.rotationX_;
      rotationY_ = other.rotationY_;
      rotationZ_ = other.rotationZ_;
      velocityX_ = other.velocityX_;
      velocityY_ = other.velocityY_;
      velocityZ_ = other.velocityZ_;
      isGrounded_ = other.isGrounded_;
      health_ = other.health_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerUpdateMessage Clone() {
      return new PlayerUpdateMessage(this);
    }

    /// <summary>Field number for the "position_x" field.</summary>
    public const int PositionXFieldNumber = 1;
    private float positionX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionX {
      get { return positionX_; }
      set {
        positionX_ = value;
      }
    }

    /// <summary>Field number for the "position_y" field.</summary>
    public const int PositionYFieldNumber = 2;
    private float positionY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionY {
      get { return positionY_; }
      set {
        positionY_ = value;
      }
    }

    /// <summary>Field number for the "position_z" field.</summary>
    public const int PositionZFieldNumber = 3;
    private float positionZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionZ {
      get { return positionZ_; }
      set {
        positionZ_ = value;
      }
    }

    /// <summary>Field number for the "rotation_x" field.</summary>
    public const int RotationXFieldNumber = 4;
    private float rotationX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RotationX {
      get { return rotationX_; }
      set {
        rotationX_ = value;
      }
    }

    /// <summary>Field number for the "rotation_y" field.</summary>
    public const int RotationYFieldNumber = 5;
    private float rotationY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RotationY {
      get { return rotationY_; }
      set {
        rotationY_ = value;
      }
    }

    /// <summary>Field number for the "rotation_z" field.</summary>
    public const int RotationZFieldNumber = 6;
    private float rotationZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RotationZ {
      get { return rotationZ_; }
      set {
        rotationZ_ = value;
      }
    }

    /// <summary>Field number for the "velocity_x" field.</summary>
    public const int VelocityXFieldNumber = 7;
    private float velocityX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VelocityX {
      get { return velocityX_; }
      set {
        velocityX_ = value;
      }
    }

    /// <summary>Field number for the "velocity_y" field.</summary>
    public const int VelocityYFieldNumber = 8;
    private float velocityY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VelocityY {
      get { return velocityY_; }
      set {
        velocityY_ = value;
      }
    }

    /// <summary>Field number for the "velocity_z" field.</summary>
    public const int VelocityZFieldNumber = 9;
    private float velocityZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VelocityZ {
      get { return velocityZ_; }
      set {
        velocityZ_ = value;
      }
    }

    /// <summary>Field number for the "is_grounded" field.</summary>
    public const int IsGroundedFieldNumber = 10;
    private bool isGrounded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsGrounded {
      get { return isGrounded_; }
      set {
        isGrounded_ = value;
      }
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 11;
    private float health_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Health {
      get { return health_; }
      set {
        health_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerUpdateMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerUpdateMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionX, other.PositionX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionY, other.PositionY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionZ, other.PositionZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotationX, other.RotationX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotationY, other.RotationY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotationZ, other.RotationZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VelocityX, other.VelocityX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VelocityY, other.VelocityY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VelocityZ, other.VelocityZ)) return false;
      if (IsGrounded != other.IsGrounded) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Health, other.Health)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PositionX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionX);
      if (PositionY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionY);
      if (PositionZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionZ);
      if (RotationX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotationX);
      if (RotationY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotationY);
      if (RotationZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotationZ);
      if (VelocityX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VelocityX);
      if (VelocityY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VelocityY);
      if (VelocityZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VelocityZ);
      if (IsGrounded != false) hash ^= IsGrounded.GetHashCode();
      if (Health != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Health);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PositionX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(PositionX);
      }
      if (PositionY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PositionY);
      }
      if (PositionZ != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PositionZ);
      }
      if (RotationX != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(RotationX);
      }
      if (RotationY != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(RotationY);
      }
      if (RotationZ != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(RotationZ);
      }
      if (VelocityX != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(VelocityX);
      }
      if (VelocityY != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(VelocityY);
      }
      if (VelocityZ != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(VelocityZ);
      }
      if (IsGrounded != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsGrounded);
      }
      if (Health != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(Health);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PositionX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(PositionX);
      }
      if (PositionY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PositionY);
      }
      if (PositionZ != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PositionZ);
      }
      if (RotationX != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(RotationX);
      }
      if (RotationY != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(RotationY);
      }
      if (RotationZ != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(RotationZ);
      }
      if (VelocityX != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(VelocityX);
      }
      if (VelocityY != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(VelocityY);
      }
      if (VelocityZ != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(VelocityZ);
      }
      if (IsGrounded != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsGrounded);
      }
      if (Health != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(Health);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PositionX != 0F) {
        size += 1 + 4;
      }
      if (PositionY != 0F) {
        size += 1 + 4;
      }
      if (PositionZ != 0F) {
        size += 1 + 4;
      }
      if (RotationX != 0F) {
        size += 1 + 4;
      }
      if (RotationY != 0F) {
        size += 1 + 4;
      }
      if (RotationZ != 0F) {
        size += 1 + 4;
      }
      if (VelocityX != 0F) {
        size += 1 + 4;
      }
      if (VelocityY != 0F) {
        size += 1 + 4;
      }
      if (VelocityZ != 0F) {
        size += 1 + 4;
      }
      if (IsGrounded != false) {
        size += 1 + 1;
      }
      if (Health != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerUpdateMessage other) {
      if (other == null) {
        return;
      }
      if (other.PositionX != 0F) {
        PositionX = other.PositionX;
      }
      if (other.PositionY != 0F) {
        PositionY = other.PositionY;
      }
      if (other.PositionZ != 0F) {
        PositionZ = other.PositionZ;
      }
      if (other.RotationX != 0F) {
        RotationX = other.RotationX;
      }
      if (other.RotationY != 0F) {
        RotationY = other.RotationY;
      }
      if (other.RotationZ != 0F) {
        RotationZ = other.RotationZ;
      }
      if (other.VelocityX != 0F) {
        VelocityX = other.VelocityX;
      }
      if (other.VelocityY != 0F) {
        VelocityY = other.VelocityY;
      }
      if (other.VelocityZ != 0F) {
        VelocityZ = other.VelocityZ;
      }
      if (other.IsGrounded != false) {
        IsGrounded = other.IsGrounded;
      }
      if (other.Health != 0F) {
        Health = other.Health;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            PositionX = input.ReadFloat();
            break;
          }
          case 21: {
            PositionY = input.ReadFloat();
            break;
          }
          case 29: {
            PositionZ = input.ReadFloat();
            break;
          }
          case 37: {
            RotationX = input.ReadFloat();
            break;
          }
          case 45: {
            RotationY = input.ReadFloat();
            break;
          }
          case 53: {
            RotationZ = input.ReadFloat();
            break;
          }
          case 61: {
            VelocityX = input.ReadFloat();
            break;
          }
          case 69: {
            VelocityY = input.ReadFloat();
            break;
          }
          case 77: {
            VelocityZ = input.ReadFloat();
            break;
          }
          case 80: {
            IsGrounded = input.ReadBool();
            break;
          }
          case 93: {
            Health = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            PositionX = input.ReadFloat();
            break;
          }
          case 21: {
            PositionY = input.ReadFloat();
            break;
          }
          case 29: {
            PositionZ = input.ReadFloat();
            break;
          }
          case 37: {
            RotationX = input.ReadFloat();
            break;
          }
          case 45: {
            RotationY = input.ReadFloat();
            break;
          }
          case 53: {
            RotationZ = input.ReadFloat();
            break;
          }
          case 61: {
            VelocityX = input.ReadFloat();
            break;
          }
          case 69: {
            VelocityY = input.ReadFloat();
            break;
          }
          case 77: {
            VelocityZ = input.ReadFloat();
            break;
          }
          case 80: {
            IsGrounded = input.ReadBool();
            break;
          }
          case 93: {
            Health = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 基础消息结构
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NetworkMessage : pb::IMessage<NetworkMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NetworkMessage> _parser = new pb::MessageParser<NetworkMessage>(() => new NetworkMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NetworkMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.FPS.Game.MessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NetworkMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NetworkMessage(NetworkMessage other) : this() {
      msgId_ = other.msgId_;
      playerId_ = other.playerId_;
      timestamp_ = other.timestamp_;
      switch (other.DataCase) {
        case DataOneofCase.Heartbeat:
          Heartbeat = other.Heartbeat.Clone();
          break;
        case DataOneofCase.PlayerUpdate:
          PlayerUpdate = other.PlayerUpdate.Clone();
          break;
        case DataOneofCase.PlayerAttribute:
          PlayerAttribute = other.PlayerAttribute.Clone();
          break;
        case DataOneofCase.PlayerState:
          PlayerState = other.PlayerState.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NetworkMessage Clone() {
      return new NetworkMessage(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 1;
    private global::Unity.FPS.Game.MessageType msgId_ = global::Unity.FPS.Game.MessageType.Heartbeat;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Unity.FPS.Game.MessageType MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private uint playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private uint timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "heartbeat" field.</summary>
    public const int HeartbeatFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Unity.FPS.Game.HeartbeatMessage Heartbeat {
      get { return dataCase_ == DataOneofCase.Heartbeat ? (global::Unity.FPS.Game.HeartbeatMessage) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Heartbeat;
      }
    }

    /// <summary>Field number for the "player_update" field.</summary>
    public const int PlayerUpdateFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Unity.FPS.Game.PlayerUpdateMessage PlayerUpdate {
      get { return dataCase_ == DataOneofCase.PlayerUpdate ? (global::Unity.FPS.Game.PlayerUpdateMessage) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.PlayerUpdate;
      }
    }

    /// <summary>Field number for the "player_attribute" field.</summary>
    public const int PlayerAttributeFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Unity.FPS.Game.PlayerAttributeMessage PlayerAttribute {
      get { return dataCase_ == DataOneofCase.PlayerAttribute ? (global::Unity.FPS.Game.PlayerAttributeMessage) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.PlayerAttribute;
      }
    }

    /// <summary>Field number for the "player_state" field.</summary>
    public const int PlayerStateFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Unity.FPS.Game.PlayerStateMessage PlayerState {
      get { return dataCase_ == DataOneofCase.PlayerState ? (global::Unity.FPS.Game.PlayerStateMessage) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.PlayerState;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      Heartbeat = 4,
      PlayerUpdate = 5,
      PlayerAttribute = 6,
      PlayerState = 7,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NetworkMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NetworkMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (PlayerId != other.PlayerId) return false;
      if (Timestamp != other.Timestamp) return false;
      if (!object.Equals(Heartbeat, other.Heartbeat)) return false;
      if (!object.Equals(PlayerUpdate, other.PlayerUpdate)) return false;
      if (!object.Equals(PlayerAttribute, other.PlayerAttribute)) return false;
      if (!object.Equals(PlayerState, other.PlayerState)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != global::Unity.FPS.Game.MessageType.Heartbeat) hash ^= MsgId.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Timestamp != 0) hash ^= Timestamp.GetHashCode();
      if (dataCase_ == DataOneofCase.Heartbeat) hash ^= Heartbeat.GetHashCode();
      if (dataCase_ == DataOneofCase.PlayerUpdate) hash ^= PlayerUpdate.GetHashCode();
      if (dataCase_ == DataOneofCase.PlayerAttribute) hash ^= PlayerAttribute.GetHashCode();
      if (dataCase_ == DataOneofCase.PlayerState) hash ^= PlayerState.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MsgId != global::Unity.FPS.Game.MessageType.Heartbeat) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MsgId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PlayerId);
      }
      if (Timestamp != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Timestamp);
      }
      if (dataCase_ == DataOneofCase.Heartbeat) {
        output.WriteRawTag(34);
        output.WriteMessage(Heartbeat);
      }
      if (dataCase_ == DataOneofCase.PlayerUpdate) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayerUpdate);
      }
      if (dataCase_ == DataOneofCase.PlayerAttribute) {
        output.WriteRawTag(50);
        output.WriteMessage(PlayerAttribute);
      }
      if (dataCase_ == DataOneofCase.PlayerState) {
        output.WriteRawTag(58);
        output.WriteMessage(PlayerState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MsgId != global::Unity.FPS.Game.MessageType.Heartbeat) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MsgId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PlayerId);
      }
      if (Timestamp != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Timestamp);
      }
      if (dataCase_ == DataOneofCase.Heartbeat) {
        output.WriteRawTag(34);
        output.WriteMessage(Heartbeat);
      }
      if (dataCase_ == DataOneofCase.PlayerUpdate) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayerUpdate);
      }
      if (dataCase_ == DataOneofCase.PlayerAttribute) {
        output.WriteRawTag(50);
        output.WriteMessage(PlayerAttribute);
      }
      if (dataCase_ == DataOneofCase.PlayerState) {
        output.WriteRawTag(58);
        output.WriteMessage(PlayerState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != global::Unity.FPS.Game.MessageType.Heartbeat) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MsgId);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerId);
      }
      if (Timestamp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Timestamp);
      }
      if (dataCase_ == DataOneofCase.Heartbeat) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Heartbeat);
      }
      if (dataCase_ == DataOneofCase.PlayerUpdate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerUpdate);
      }
      if (dataCase_ == DataOneofCase.PlayerAttribute) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerAttribute);
      }
      if (dataCase_ == DataOneofCase.PlayerState) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NetworkMessage other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != global::Unity.FPS.Game.MessageType.Heartbeat) {
        MsgId = other.MsgId;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Timestamp != 0) {
        Timestamp = other.Timestamp;
      }
      switch (other.DataCase) {
        case DataOneofCase.Heartbeat:
          if (Heartbeat == null) {
            Heartbeat = new global::Unity.FPS.Game.HeartbeatMessage();
          }
          Heartbeat.MergeFrom(other.Heartbeat);
          break;
        case DataOneofCase.PlayerUpdate:
          if (PlayerUpdate == null) {
            PlayerUpdate = new global::Unity.FPS.Game.PlayerUpdateMessage();
          }
          PlayerUpdate.MergeFrom(other.PlayerUpdate);
          break;
        case DataOneofCase.PlayerAttribute:
          if (PlayerAttribute == null) {
            PlayerAttribute = new global::Unity.FPS.Game.PlayerAttributeMessage();
          }
          PlayerAttribute.MergeFrom(other.PlayerAttribute);
          break;
        case DataOneofCase.PlayerState:
          if (PlayerState == null) {
            PlayerState = new global::Unity.FPS.Game.PlayerStateMessage();
          }
          PlayerState.MergeFrom(other.PlayerState);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MsgId = (global::Unity.FPS.Game.MessageType) input.ReadEnum();
            break;
          }
          case 16: {
            PlayerId = input.ReadUInt32();
            break;
          }
          case 24: {
            Timestamp = input.ReadUInt32();
            break;
          }
          case 34: {
            global::Unity.FPS.Game.HeartbeatMessage subBuilder = new global::Unity.FPS.Game.HeartbeatMessage();
            if (dataCase_ == DataOneofCase.Heartbeat) {
              subBuilder.MergeFrom(Heartbeat);
            }
            input.ReadMessage(subBuilder);
            Heartbeat = subBuilder;
            break;
          }
          case 42: {
            global::Unity.FPS.Game.PlayerUpdateMessage subBuilder = new global::Unity.FPS.Game.PlayerUpdateMessage();
            if (dataCase_ == DataOneofCase.PlayerUpdate) {
              subBuilder.MergeFrom(PlayerUpdate);
            }
            input.ReadMessage(subBuilder);
            PlayerUpdate = subBuilder;
            break;
          }
          case 50: {
            global::Unity.FPS.Game.PlayerAttributeMessage subBuilder = new global::Unity.FPS.Game.PlayerAttributeMessage();
            if (dataCase_ == DataOneofCase.PlayerAttribute) {
              subBuilder.MergeFrom(PlayerAttribute);
            }
            input.ReadMessage(subBuilder);
            PlayerAttribute = subBuilder;
            break;
          }
          case 58: {
            global::Unity.FPS.Game.PlayerStateMessage subBuilder = new global::Unity.FPS.Game.PlayerStateMessage();
            if (dataCase_ == DataOneofCase.PlayerState) {
              subBuilder.MergeFrom(PlayerState);
            }
            input.ReadMessage(subBuilder);
            PlayerState = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MsgId = (global::Unity.FPS.Game.MessageType) input.ReadEnum();
            break;
          }
          case 16: {
            PlayerId = input.ReadUInt32();
            break;
          }
          case 24: {
            Timestamp = input.ReadUInt32();
            break;
          }
          case 34: {
            global::Unity.FPS.Game.HeartbeatMessage subBuilder = new global::Unity.FPS.Game.HeartbeatMessage();
            if (dataCase_ == DataOneofCase.Heartbeat) {
              subBuilder.MergeFrom(Heartbeat);
            }
            input.ReadMessage(subBuilder);
            Heartbeat = subBuilder;
            break;
          }
          case 42: {
            global::Unity.FPS.Game.PlayerUpdateMessage subBuilder = new global::Unity.FPS.Game.PlayerUpdateMessage();
            if (dataCase_ == DataOneofCase.PlayerUpdate) {
              subBuilder.MergeFrom(PlayerUpdate);
            }
            input.ReadMessage(subBuilder);
            PlayerUpdate = subBuilder;
            break;
          }
          case 50: {
            global::Unity.FPS.Game.PlayerAttributeMessage subBuilder = new global::Unity.FPS.Game.PlayerAttributeMessage();
            if (dataCase_ == DataOneofCase.PlayerAttribute) {
              subBuilder.MergeFrom(PlayerAttribute);
            }
            input.ReadMessage(subBuilder);
            PlayerAttribute = subBuilder;
            break;
          }
          case 58: {
            global::Unity.FPS.Game.PlayerStateMessage subBuilder = new global::Unity.FPS.Game.PlayerStateMessage();
            if (dataCase_ == DataOneofCase.PlayerState) {
              subBuilder.MergeFrom(PlayerState);
            }
            input.ReadMessage(subBuilder);
            PlayerState = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
